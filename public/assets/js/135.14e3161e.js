(window.webpackJsonp=window.webpackJsonp||[]).push([[135],{740:function(s,a,e){"use strict";e.r(a);var t=e(5),n=Object(t.a)({},(function(){var s=this,a=s.$createElement,e=s._self._c||a;return e("ContentSlotsDistributor",{attrs:{"slot-key":s.$parent.slotKey}},[e("p",[s._v("开这篇文章的起因其实是想尝试一下 QT 的 "),e("code",[s._v("qmake")]),s._v(" ，然后发现指令好多 ... ，包含")]),s._v(" "),e("div",{staticClass:"language- line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[s._v("编译：\n$ qmake -project QT+=widgets\n$ qmake ./$project_name.pro\n$ make\n运行：\n$ ./$project_name.app/Contents/MacOS/$project_name\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br"),e("span",{staticClass:"line-number"},[s._v("2")]),e("br"),e("span",{staticClass:"line-number"},[s._v("3")]),e("br"),e("span",{staticClass:"line-number"},[s._v("4")]),e("br"),e("span",{staticClass:"line-number"},[s._v("5")]),e("br"),e("span",{staticClass:"line-number"},[s._v("6")]),e("br")])]),e("p",[s._v("懒人噩梦罢了，然后看到网上说可以把命令用 shell 封装成一个 "),e("code",[s._v(".sh")]),s._v(" 文件，需要执行的时候直接 "),e("code",[s._v("bash 文件名.sh")]),s._v(" 即可"),e("br"),s._v("\n看起来很好玩，开整")]),s._v(" "),e("h2",{attrs:{id:"脚本创建"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#脚本创建"}},[s._v("#")]),s._v(" 脚本创建")]),s._v(" "),e("p",[s._v("选择一个稳定的位置创建脚本目录（我选择的是 "),e("code",[s._v("~/bin")]),s._v("，并且下面讲解是围绕这种创建位置展开的，要换位置的话自行替换下面的介绍）"),e("br"),s._v("\n然后在里面创建一个 "),e("code",[s._v("hello.sh")]),s._v(" 用来写一个脚本，这里就先用简单的 "),e("code",[s._v("echo")]),s._v(" 命令来写")]),s._v(" "),e("div",{staticClass:"language-sh line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-sh"}},[e("code",[e("span",{pre:!0,attrs:{class:"token shebang important"}},[s._v("#!/bin/bash")]),s._v("\n\n"),e("span",{pre:!0,attrs:{class:"token assign-left variable"}},[s._v("a")]),e("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),e("span",{pre:!0,attrs:{class:"token number"}},[s._v("1")]),s._v("\n"),e("span",{pre:!0,attrs:{class:"token assign-left variable"}},[s._v("abc")]),e("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),e("span",{pre:!0,attrs:{class:"token number"}},[s._v("123")]),s._v("\n\n"),e("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v("echo")]),s._v(" "),e("span",{pre:!0,attrs:{class:"token variable"}},[s._v("$a")]),s._v("\n"),e("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v("echo")]),s._v(" "),e("span",{pre:!0,attrs:{class:"token variable"}},[s._v("$abc")]),s._v("\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br"),e("span",{staticClass:"line-number"},[s._v("2")]),e("br"),e("span",{staticClass:"line-number"},[s._v("3")]),e("br"),e("span",{staticClass:"line-number"},[s._v("4")]),e("br"),e("span",{staticClass:"line-number"},[s._v("5")]),e("br"),e("span",{staticClass:"line-number"},[s._v("6")]),e("br"),e("span",{staticClass:"line-number"},[s._v("7")]),e("br")])]),e("p",[s._v("保存后执行代码，也就是 "),e("code",[s._v("bash hello.sh")]),s._v(" 后，会输出")]),s._v(" "),e("p",[e("img",{attrs:{src:"https://raw.githubusercontent.com/Tequila-Avage/PicGoBeds/master/20230512235105.png",alt:"20230512235105"}})]),s._v(" "),e("div",{staticClass:"custom-block tip"},[e("p",{staticClass:"title"},[s._v("可能会有如下问题")]),e("p",[e("strong",[s._v("问题1")]),s._v("："),e("code",[s._v("a command not found")]),e("br"),s._v("\n这是因为会有人在编辑别的代码时有好的习惯“运算符两侧加空格”，而 "),e("code",[s._v(".sh")]),s._v(" 的语法让我们在等号这里不能有空格，所以一定写成 "),e("code",[s._v("a=1")]),s._v(" 这种形式")]),s._v(" "),e("p",[e("strong",[s._v("问题2")]),s._v("："),e("code",[s._v("bash: hello.sh: No such file or directory")]),e("br"),s._v("\n(如果没保存的保存一下)这里介绍另一种，也就是不在父级目录下运行，这个等下会说")])]),e("h2",{attrs:{id:"全局化"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#全局化"}},[s._v("#")]),s._v(" 全局化")]),s._v(" "),e("p",[s._v("这也是上面问题2的解决方案"),e("br"),s._v("\n我们要将我们这个父级目录加入系统路径"),e("br"),s._v("\n打开 "),e("code",[s._v("~/.zshrc")]),s._v(" （我用的是 "),e("code",[s._v("zsh")]),s._v(" ，用 "),e("code",[s._v("bash")]),s._v(" 的打开 "),e("code",[s._v("~/.bashrc")]),s._v("）"),e("br"),s._v("\n加入一句话")]),s._v(" "),e("div",{staticClass:"language-r line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-r"}},[e("code",[s._v("export PATH"),e("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('"~/bin:$PATH"')]),s._v("\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br")])]),e("p",[s._v("然后 "),e("code",[s._v("source")]),s._v(" 一下，此时我们在任何地方执行 "),e("code",[s._v("bash hello.sh")]),s._v(" 都会有上面的输出了")]),s._v(" "),e("h2",{attrs:{id:"应用-替代编译"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#应用-替代编译"}},[s._v("#")]),s._v(" 应用：替代编译")]),s._v(" "),e("p",[s._v("学了上面这些，我们应该投入我们实际的需求，也就是组装编译命令\n这里就来一个简单的一键 "),e("code",[s._v("cmake")]),s._v(" 编译运行吧"),e("br"),s._v("\n在此之前创建一个简单的 cmake 工程")]),s._v(" "),e("div",{staticClass:"language- line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[s._v("/hello\n    main.cpp\n    CMakeLists.txt\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br"),e("span",{staticClass:"line-number"},[s._v("2")]),e("br"),e("span",{staticClass:"line-number"},[s._v("3")]),e("br")])]),e("p",[e("code",[s._v("main.cpp")]),s._v(" 里面就是一个输出 "),e("code",[s._v("hello world")]),e("br"),s._v("\n我们在 "),e("code",[s._v("~/bin")]),s._v(" 创建一个 "),e("code",[s._v("cmake.sh")]),s._v(" ，编写如下内容")]),s._v(" "),e("div",{staticClass:"language-sh line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-sh"}},[e("code",[e("span",{pre:!0,attrs:{class:"token shebang important"}},[s._v("#!/bin/bash")]),s._v("\n\n"),e("span",{pre:!0,attrs:{class:"token assign-left variable"}},[s._v("project_path")]),e("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),e("span",{pre:!0,attrs:{class:"token variable"}},[e("span",{pre:!0,attrs:{class:"token variable"}},[s._v("`")]),e("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v("pwd")]),e("span",{pre:!0,attrs:{class:"token variable"}},[s._v("`")])]),s._v(" "),e("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 工程路径，pwd 命令获取")]),s._v("\n"),e("span",{pre:!0,attrs:{class:"token assign-left variable"}},[s._v("project_name")]),e("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('"'),e("span",{pre:!0,attrs:{class:"token variable"}},[s._v("${project_path"),e("span",{pre:!0,attrs:{class:"token operator"}},[s._v("##")]),s._v("*"),e("span",{pre:!0,attrs:{class:"token operator"}},[s._v("/")]),s._v("}")]),s._v('"')]),s._v(" "),e("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 工程名")]),s._v("\n\ncmake -B build  "),e("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 在 build 文件夹内生成 Makefile ")]),s._v("\n"),e("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v("cd")]),s._v(" build        "),e("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 进入 build 文件夹")]),s._v("\n"),e("span",{pre:!0,attrs:{class:"token function"}},[s._v("make")]),s._v("            "),e("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 生成可执行文件")]),s._v("\n./"),e("span",{pre:!0,attrs:{class:"token variable"}},[s._v("$project_name")]),s._v(" "),e("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 运行可执行文件")]),s._v("\n"),e("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v("cd")]),s._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("..")]),s._v("           "),e("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 退回来")]),s._v("\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br"),e("span",{staticClass:"line-number"},[s._v("2")]),e("br"),e("span",{staticClass:"line-number"},[s._v("3")]),e("br"),e("span",{staticClass:"line-number"},[s._v("4")]),e("br"),e("span",{staticClass:"line-number"},[s._v("5")]),e("br"),e("span",{staticClass:"line-number"},[s._v("6")]),e("br"),e("span",{staticClass:"line-number"},[s._v("7")]),e("br"),e("span",{staticClass:"line-number"},[s._v("8")]),e("br"),e("span",{staticClass:"line-number"},[s._v("9")]),e("br"),e("span",{staticClass:"line-number"},[s._v("10")]),e("br")])]),e("p",[s._v("基本就是把我们要执行的命令放在了一起，这里的两个变量 "),e("code",[s._v("project_path")]),s._v(" 和 "),e("code",[s._v("project_name")]),s._v(" 就是工程路径和工程名"),e("br"),s._v("\n了解一点命令的很容易看出来我们要求工程名与文件夹名同名（"),e("code",[s._v("pwd")]),s._v(" 是获取当前路径的命令）")]),s._v(" "),e("p",[s._v("保存后在我们的工程目录 "),e("code",[s._v("hello")]),s._v(" 内，执行 "),e("code",[s._v("bash cmake.sh")]),s._v(" 后即可看到输出")]),s._v(" "),e("p",[e("img",{attrs:{src:"https://raw.githubusercontent.com/Tequila-Avage/PicGoBeds/master/20230512234902.png",alt:"20230512234902"}})])])}),[],!1,null,null,null);a.default=n.exports}}]);